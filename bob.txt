#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


void display(vector<vector<int>> arr)
{
    for(long unsigned int j=0;j<arr.size();j++)
    {
        for(long unsigned int i=0;i<arr[j].size();i++)
            cout<<arr[j][i]<<"\t";
        cout<<endl;
    }
}

int main() {
    int roads, nodes, cap;
    scanf("%d %d %d",&nodes,&roads,&cap);
    vector<vector<int>> vec;
    // printf("vec init output\n");
    for(int i=0;i<nodes;i++)
    {
        vector<int> abc(nodes);
        fill(abc.begin(),abc.end(),-1);
        vec.push_back(abc);
        vec[i][i]=0;
    }
    // cout<<"Nodes are added\n";
    for(int i=0;i<roads;i++)
    {
        int n1,n2,cost;
        scanf("%d %d %d",&n1,&n2,&cost);
        vec[n1-1][n2-1] = cost;
        vec[n2-1][n1-1] = cost;
    }
    
    // display(vec);
    int quer;
    scanf("%d",&quer);    
    for(int i=0;i<nodes;i++)
    {
        for(int j=0;j<nodes;j++)
        {
            for(int k=0;k<nodes;k++)
            {
                if(j!=i && vec[i][k]!=-1 && vec[j][i]!=-1)
                {
                    if(vec[j][k]==-1  || (vec[j][k]> vec[j][i]+vec[i][k] ) )
                    {
                        vec[j][k] = vec[j][i]+vec[i][k];
                    }
                }


            }
        }
    }
    // display(vec);
    for(int i=0;i<quer;i++)
    {
        int a1,a2;
        scanf("%d %d",&a1,&a2);
        int k = vec[a1-1][a2-1];
        if(k==-1)
        {
            printf("-1\n");
        }
        else
        {
            
            
        if(k%cap == 0)
        {
            printf("%d\n",(k/cap -1));
        }
        else
        {
            printf("%d\n",(k/cap));
        }
        }
    }    
    
    
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    return 0;
}
